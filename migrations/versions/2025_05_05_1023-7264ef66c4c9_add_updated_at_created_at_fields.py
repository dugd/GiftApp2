"""add updated_at created_at fields

Revision ID: 7264ef66c4c9
Revises: 990201af66fc
Create Date: 2025-05-05 10:23:25.550308

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '7264ef66c4c9'
down_revision: Union[str, None] = '990201af66fc'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('event_occurrences', sa.Column('updated_at', sa.TIMESTAMP(), nullable=True))
    op.alter_column('event_occurrences', 'created_at',
               existing_type=postgresql.TIMESTAMP(),
               server_default=sa.text('now()'),
               existing_nullable=False)
    op.add_column('events', sa.Column('created_at', sa.TIMESTAMP(), server_default=sa.text('now()'), nullable=False))
    op.add_column('events', sa.Column('updated_at', sa.TIMESTAMP(), nullable=True))
    op.add_column('users', sa.Column('updated_at', sa.TIMESTAMP(), nullable=True))
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_column('users', 'updated_at')
    op.drop_column('events', 'updated_at')
    op.drop_column('events', 'created_at')
    op.alter_column('event_occurrences', 'created_at',
               existing_type=postgresql.TIMESTAMP(),
               server_default=None,
               existing_nullable=False)
    op.drop_column('event_occurrences', 'updated_at')
    # ### end Alembic commands ###
