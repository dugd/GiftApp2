"""init database v2

Revision ID: c76ba8f829ad
Revises: 
Create Date: 2025-05-05 12:51:25.494466

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = 'c76ba8f829ad'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('users',
    sa.Column('email', sa.String(), nullable=False),
    sa.Column('role', sa.String(), nullable=False),
    sa.Column('hashed_password', sa.String(), nullable=False),
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('created_at', sa.TIMESTAMP(), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.TIMESTAMP(), nullable=True),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_users')),
    sa.UniqueConstraint('email', name=op.f('uq_users_email'))
    )
    op.create_table('recipients',
    sa.Column('name', sa.String(length=32), nullable=False),
    sa.Column('birthday', sa.Date(), nullable=True),
    sa.Column('relation', sa.String(length=32), nullable=True),
    sa.Column('preferences', sa.JSON(), nullable=True),
    sa.Column('notes', sa.String(), nullable=True),
    sa.Column('user_id', sa.UUID(), nullable=False),
    sa.Column('id', sa.UUID(), nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], name=op.f('fk_recipients_user_id_users')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_recipients'))
    )
    op.create_table('events',
    sa.Column('title', sa.String(length=32), nullable=False),
    sa.Column('type', sa.String(length=32), nullable=False),
    sa.Column('is_global', sa.Boolean(), nullable=False),
    sa.Column('is_repeating', sa.Boolean(), nullable=False),
    sa.Column('start_date', sa.Date(), nullable=False),
    sa.Column('user_id', sa.UUID(), nullable=True),
    sa.Column('recipient_id', sa.UUID(), nullable=True),
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('created_at', sa.TIMESTAMP(), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.TIMESTAMP(), nullable=True),
    sa.Column('deleted_at', sa.TIMESTAMP(), nullable=True),
    sa.CheckConstraint('(NOT is_global) OR (recipient_id IS NULL)', name=op.f('ck_events_global_recipient_null')),
    sa.ForeignKeyConstraint(['recipient_id'], ['recipients.id'], name=op.f('fk_events_recipient_id_recipients')),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], name=op.f('fk_events_user_id_users')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_events'))
    )
    op.create_table('event_occurrences',
    sa.Column('occurrence_date', sa.Date(), nullable=False),
    sa.Column('event_id', sa.UUID(), nullable=False),
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('created_at', sa.TIMESTAMP(), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.TIMESTAMP(), nullable=True),
    sa.ForeignKeyConstraint(['event_id'], ['events.id'], name=op.f('fk_event_occurrences_event_id_events')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_event_occurrences'))
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('event_occurrences')
    op.drop_table('events')
    op.drop_table('recipients')
    op.drop_table('users')
    # ### end Alembic commands ###
